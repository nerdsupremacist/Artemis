{
    "artemisApp": {
        "programmingExercise": {
            "home": {
                "title": "Programming Exercises",
                "createLabel": "Create new Programming Exercise",
                "editLabel": "Edit Programming Exercise",
                "importLabel": "Import new Programming Exercise",
                "linkLabel": "Link new Programming Exercise",
                "editLinkLabel": "Edit linked Programming Exercise",
                "generateLabel": "Generate new Programming Exercise",
                "createOrEditLabel": "Create or edit a Programming Exercise"
            },
            "created": "A new Programming Exercise was created with title {{ param }}",
            "updated": "A Programming Exercise was updated with title {{ param }}",
            "deleted": "A Programming Exercise was deleted with title {{ param }}",
            "delete": {
                "question": "Are you sure you want to delete the Programming Exercise <strong>{{ title }}</strong>?",
                "studentReposBuildPlans": "Additionally delete all student repositories and student build plans (Be careful: this can NOT be undone!). Before you activate this option, we recommend that you archive the exercise first!",
                "baseReposBuildPlans": "Additionally delete template, solution and test repos and build plans (Be careful: this can NOT be undone!). Before you activate this option, we recommend that you backup these build plans and repos first!"
            },
            "detail": {
                "title": "Programming Exercise"
            },
            "unsavedChangesLanguageChange": "The problem statement still contains unsaved changes. Do you really want to change the programming language?",
            "templateRepositoryUrl": "Template Repository Url",
            "testRepositoryUrl": "Test Repository Url (optional)",
            "solutionRepositoryUrl": "Solution Repository Url (optional)",
            "templateBuildPlanId": "Template Build Plan Id",
            "solutionBuildPlanId": "Solution Build Plan Id (optional)",
            "repositories": "Repositories",
            "buildplans": "Build Plans",
            "publishBuildPlanUrl": "Publish Build Plan",
            "allowOnlineEditor": "Allow Online Editor",
            "sequentialTestRuns": {
                "title": "Sequential Test Runs",
                "description": "Activate to first run structural and then behavior test. This feature can help students to better concentrate on the immediate challenge at hand. If activated, you will be provided with more information in a readme file within the test repository. ATTENTION: Can not be changed after creation!"
            },
            "programmingLanguage": "Programming Language",
            "packageName": "Package Name",
            "templateResult": "Template Result",
            "solutionResult": "Solution Result",
            "structureTestOracle": "Update Structure Test Oracle",
            "structureTestOracleWarning": "This action extracts all structural tests from the test repository and saves them in the test.json file. ATTENTION: This way all uncommitted changes from the online-editor will be lost!",
            "squashTemplateCommits": "Squash Template Commits",
            "squashTemplateCommitsWarning": "This action squashes all commits in the template repository into one commit. ATTENTION: This way all uncommitted changes from the online-editor will be lost!",
            "squashTemplateCommitsError": "Template repository commits could not be squashed.",
            "squashTemplateCommitsSuccess": "Template repository commits have been successfully squashed.",
            "editable": {
                "unsaved": "Unsaved.",
                "unsavedTooltip": "There are unsaved changes in the problem statement.",
                "saving": "Saving...",
                "savingTooltip": "Saving your unsaved changes in the problem statement.",
                "saved": "Saved.",
                "savedTooltip": "The problem statement is saved."
            },
            "problemStatement": {
                "title": "Problem Statement",
                "taskCommand": "[task] Task",
                "testCaseCommand": "Insert Test Case",
                "exerciseHintCommand": "Add task specific hint"
            },
            "status": {
                "solutionFailsTest": "The Solution Repository does not fulfill one or more test cases. This could indicate an issue with the Solution Repository or the test cases.",
                "templateFulfillsTest": "The Template Repository already fulfills one or more test cases. This could indicate an issue with the Template Repository or the test cases."
            },
            "testCaseAnalysis": {
                "invalidTestCases": "There are {{number}} test cases that were found in the problem statement markdown, but are not valid test cases in the test repository of this exercise:",
                "missingTestCases": "There are {{number}} test cases that are valid test cases in your test repository but were not found in the markdown of the problem statement:",
                "issues": "Test case issues.",
                "ok": "Test cases ok.",
                "invalidTestCase": "The test case '{{id}}' could not be found in the test repository."
            },
            "hintsAnalysis": {
                "invalidHints": "There are {{number}} hints that were found in the problem statement markdown but can't be found in the database or are not assigned to this programming exercise:",
                "issues": "Hints issues.",
                "ok": "Hints ok.",
                "invalidHint": "The hint with id '{{id}}' could not be found in the database for this programming exercise."
            },
            "manageTestCases": {
                "title": "Manage Test Cases",
                "hideInactive": "Hide inactive test cases",
                "showInactive": "Show inactivate test cases",
                "resetWeights": "Reset weights",
                "weightsReset": "The weights were reset successfully.",
                "weightsResetFailed": "The weights could not be reset.",
                "saveWeights": "Save weights",
                "weightsUpdated": "The weights were updated successfully.",
                "weightCouldNotBeUpdated": "The weights for the following test cases could not be updated: {{testCases}}.",
                "saveTestCases": "Save test cases",
                "testCasesUpdated": "The test cases were updated successfully.",
                "testCasesCouldNotBeUpdated": "The following test cases could not be updated: {{testCases}}.",
                "noUnsavedChanges": "No unsaved changes",
                "unsavedChanges": "Unsaved changes",
                "updatedTestCasesShort": "Updated test cases",
                "updatedTestCases": "Warning: You have updated the exercise's test cases, but you have not triggered all student submissions with the new test case settings. Newly created results will be graded with the new test case settings, existing results will not be changed. If you don't trigger all student submissions, the results across your students might therefore be inconsistent. You can still trigger the student submissions at a later point. Do you really want to leave the area?",
                "updatedTestCasesTooltip": "You have updated the test cases, this does not have direct implications on the student results though. Newly created results will be graded with the new test case settings, existing results will not be changed. If you don't trigger all student submissions after the test case updates, the results across your students might be inconsistent. With the button 'Trigger all' you can trigger the submissions of all students with the updated test case settings.",
                "noUpdatedTestCases": "No updated test cases",
                "runAfterDueDateDisabled": "You can't set a test case to be run after the due date, because no build and test date is defined for this exercise. Click on the button to set this date in the edit page.",
                "notReleased": "Not released",
                "notReleasedTooltip": "The programming exercise is not yet released or is relased but does not yet have student results. Therefore you can change the test cases without having to trigger existing student submissions with the updated settings."
            },
            "export": {
                "downloadAllStudents": "Download the repositories of all students",
                "filterLateSubmissions": "Filter late submissions",
                "filterLateSubmissionsDate": "Date for filter late submissions (defaults to exercise due date if not set)",
                "addStudentName": "Add student name to project",
                "squashAfterInstructor": "Squash all changes after instructor into one commit",
                "normalizeCodeStyle": "Normalize code style (line endings, encoding)"
            },
            "resubmitOnFailedSubmission": "The result for the last submission of this participation could not be generated. Click the button to submit again. This will trigger a new build run that tests the last submission.",
            "resubmit": "Resubmit the last submission. This will execute a build run on the participation's repository without making a commit.",
            "resubmitAll": "Trigger all",
            "resubmitAllTooltip": "Trigger the last submission of all participations again. The results will be rated.",
            "resubmitAllDialog": "WARNING: Triggering all participations again is a very expensive operation. This action will start a CI build for every participation in this exercise. This means that all results of the students will be calculated again and overridden with a newly generated result based on their last commit!",
            "resubmitFailed": "Trigger failed",
            "resubmitFailedTooltip": "Trigger the last submission of all failed participations again. Failed submissions don't have a result for their latest submission. This can e.g. happen due to communication errors between the CI system and Artemis. The created results will be rated.",
            "buildingSubmissions": "Building submissions: {{number}}",
            "failedSubmissions": "Failed submissions: {{number}}",
            "resultETA": "Result ETA: {{eta}}",
            "resultETATooltip": "Shows how long an average submission has to wait for its result. Depends on the utilization of the build system.",
            "titleTooltip": "The title of the exercise can always be changed after creating it. It will be part of the project name of the for the exercise created project on the VCS server",
            "shortNameTooltip": "The short name of the exercise can NOT be edited after creating the exercise! Together with the course short name, it is used as a unique identifier for the exercise in all parts of Artemis (incl. repositories and build plans)",
            "categoriesTooltip": "You can define up to two categories per exercise (Enter category and press ENTER). You are free in defining them, though it might be best to use them consistently. They will be visible to students",
            "timeline": {
                "manualReview": "Manual Review",
                "automaticTests": "Automatic Tests",
                "afterDueDate": "Run Tests once after Due Date",
                "timelineLabel": "Timeline of the whole programming exercise",
                "timelineTooltip": "The whole lifecycle of the programming exercise. You can specify different critical dates and decide when which kind of tests should be run on all submissions",
                "automaticTestsMandatoryTooltip": "Every commit of a participant triggers all in the test repository committed tests. Exempt are tests, which are specified to be run after the due date.",
                "automaticTestsAfterDueDateTooltip": "As soon as the specified after due date passes, all submissions will get tested again using ALL in the test repository committed tests (Including tests specified to be run after the due date)",
                "manualReviewTooltip": "After all tests have been run, the tutors and instructors have to review all submissions manually one last time",
                "releaseDateTooltip": "The release date of the exercise. Students will only be able to participate in the exercise starting from the specified date",
                "dueDateTooltip": "The deadline on which submitting and committing new code will be deactivated for all students",
                "afterDueDateTooltip": "Activate this setting to build & test all student submissions on the selected date. This date must be set after the due date. The created results from the students' submission will be rated even though the due date has passed.",
                "alertNewDueDate": "The due date has been set to the release date!",
                "alertNewAfterDueDate": "The after due date has been set to the release date!",
                "notSet": "not set"
            },
            "import": {
                "attention": "Attention! ",
                "markdownWarning": "You can edit the problem statement after importing the exercise.",
                "loading": "Loading...",
                "table": {
                    "title": "Title",
                    "language": "Programming Language",
                    "course": "Course",
                    "doImport": "Import"
                }
            },
            "repositoryIsLocked": {
                "title": "Your Repository is locked.",
                "tooltip": "The due date has passed, your repository is locked. You can still read the code but not make any changes to it."
            },
            "preview": {
                "label": "Preview",
                "tooltip": "For every programming exercises, repositories and build plans will be generated. Here you can find their generated names based on the short name of the exercise (and course)",
                "repositories": "Repositories",
                "buildPlans": "Build Plans",
                "templateRepoTooltip": "The repository, which contains the template of the exercise",
                "solutionRepoTooltip": "The repository, which contains the solution of the exercise",
                "testRepoTooltip": "The repository, which contains all tests",
                "templateBuildPlanTooltip": "The build plan of the template. Runs all tests on the template of the exercise. Used as a reference, for which all tests have to fail",
                "solutionBuildPlanTooltip": "The build plan of the solution. Runs all tests on the solution of the exercise. Used as a reference, for which all tests have to succeed"
            }
        },
        "error": {
            "noparticipations": "No existing user was specified or no submission exists."
        }
    }
}
